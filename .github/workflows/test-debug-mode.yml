name: Test Weather Notifier Debug Mode

on:
  # Allow manual trigger from GitHub
  workflow_dispatch:
    inputs:
      debug:
        description: 'Run in debug mode'
        required: false
        default: 'true'
  
  # You can keep these triggers or remove them if you only want manual execution
  push:
    branches:
      - main
    paths:
      - 'scripts/weather-notifier.js'
  pull_request:
    branches:
      - main
    paths:
      - 'scripts/weather-notifier.js'

jobs:
  test-debug-mode:
    name: Test Weather Notifier in Debug Mode
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          npm install openai firebase-admin dotenv
      
      - name: Find weather notifier script
        id: find-script
        run: |
          echo "Looking for weather-notifier.js in repository..."
          SCRIPT_PATH=$(find . -type f -name "weather-notifier.js" | head -n 1)
          if [ -z "$SCRIPT_PATH" ]; then
            echo "Error: weather-notifier.js not found in repository"
            echo "Listing scripts directory contents for debugging:"
            ls -la ./scripts/ || echo "scripts directory not found"
            ls -la ./.github/scripts/ || echo ".github/scripts directory not found"
            exit 1
          fi
          echo "Found script at: $SCRIPT_PATH"
          echo "script_path=$SCRIPT_PATH" >> $GITHUB_OUTPUT
      
      - name: Run weather notifier in debug mode
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DEBUG_MODE: 'true'  # Force debug mode to be true
        run: |
          # Create a temporary directory with package.json
          TEMP_DIR=$(mktemp -d)
          cd $TEMP_DIR
          
          # Initialize a new Node.js project and install dependencies
          npm init -y
          npm install firebase-admin openai dotenv
          
          # Get the full path of the script and verify it exists
          FULL_SCRIPT_PATH=$(realpath ${{ steps.find-script.outputs.script_path }} || echo "not_found")
          
          if [ "$FULL_SCRIPT_PATH" = "not_found" ] || [ ! -f "$FULL_SCRIPT_PATH" ]; then
            echo "Script not found at path: ${{ steps.find-script.outputs.script_path }}"
            echo "Current working directory: $(pwd)"
            echo "Repository root directory: $GITHUB_WORKSPACE"
            echo "Looking for script in repository again..."
            find $GITHUB_WORKSPACE -name "weather-notifier.js" -type f
            exit 1
          fi
          
          echo "Found script at: $FULL_SCRIPT_PATH"
          echo "Converting from ES modules to CommonJS..."
          
          # Copy the script to the temporary directory with CommonJS syntax
          cat "$FULL_SCRIPT_PATH" | sed "s/import \* as admin from 'firebase-admin';/const admin = require('firebase-admin');/g" | sed "s/import { OpenAI } from 'openai';/const { OpenAI } = require('openai');/g" | sed "s/import dotenv from 'dotenv';/const dotenv = require('dotenv');/g" > weather-notifier.js
          
          echo "Running modified script in temporary directory with debug mode..."
          echo "===================== DEBUG MODE OUTPUT ====================="
          # Run with increased verbosity for debugging
          DEBUG_MODE=true node weather-notifier.js
          RESULT=$?
          echo "===================== END OF OUTPUT ====================="
          echo "Script exited with code: $RESULT"
          
          # If the script runs successfully, summarize what would happen in production
          if [ $RESULT -eq 0 ]; then
            echo ""
            echo "✅ Debug test completed successfully."
            echo "In production mode, the script would:"
            echo "- Actually send email notifications instead of just logging them"
            echo "- Record notifications in the Firebase database"
            echo "- Exit with code 0 on success"
          else
            echo ""
            echo "❌ Debug test failed with exit code $RESULT"
            echo "Check the logs above for more details."
          fi
      
      - name: Report results
        if: always()
        run: |
          echo "Weather notifier debug test completed at $(date)"
          echo "See logs for details"